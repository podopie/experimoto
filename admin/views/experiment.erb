<div class="hero-unit">
  <h1>
    <%= experiment.name %>
  </h1>
  <span class="<%= experiment.type%>"><%= experiment.type%></span>
  <p class="description"><%= experiment.description %></p>
</div>
  <p>
    <a href="/experiment/<%= experiment.id %>/edit" class="btn btn-primary">Edit Experiment</a>
    <a href="/experiment/<%= experiment.id %>/delete" class="btn btn-danger">Delete Experiment</a>
  </p>
  <p>Utility Function: <%= experiment.utility_function_string %></p>
<h2>Groups</h2>
<table class="table table-bordered">
  <thead>
    <tr>
      <th>Group Name</th>
      <th>Split %</th>
      <th># Runs</th>
      <th>Avg Utility</th>
      <% for v in experiment.utility_function_variables %>
        <th><%= v %></th>
      <% end %>
    </tr>
  </thead>
  <tbody>
    <% for group_name in experiment.groups.keys.sort %>
      <tr id="<%= group_name %>">
        <td class="column-name"><%= group_name %></td>
        <td class="column-splt"><%= experiment.group_split_weights[group_name] %></td>
        <td class="column-play"><%= experiment.plays[group_name] %> participants</td>
        <td class="column-util"><%= experiment.utility(group_name) * experiment.plays[group_name] %> utils,
          <%= experiment.utility(group_name) %> average</td>
        <% for v in experiment.utility_function_variables %>
          <td class="column-totl-<%= v %>"><%= experiment.event_totals[group_name][v] %> total,
            <%= experiment.event_totals[group_name][v] / (0.001 + experiment.plays[group_name]) %> average</td>
        <% end %>
      </tr>
    <% end %>
  </tbody>
</table>

<% if @has_chart_info %>
<table id="time_chart_info" class="table table-bordered">
  <thead>
    <tr>
      <th>dates</th>
      <% for group_name in experiment.groups.keys.sort %>
      <th>plays_<%= group_name %></th>
      <th>utilities_<%= group_name %></th>
      <% if experiment.type =~ /ucb1/i %>
      <th>confidences_<%= group_name %></th>
      <% end %>
      <% end %>
    </tr>
  </thead>
  <tbody>
  <% for ix in @chart_sample_count.times.to_a %>
    <tr id="time-row-<%= ix %>">
      <td class="column-time"><%= @date_row[ix].to_s %></td>
      <% for group_name in experiment.groups.keys.sort %>
      <td class="column-play-<%=group_name %>"><%= @plays_rows[group_name][ix] %></td>
      <td class="column-util-<%=group_name %>"><%= @utilities_rows[group_name][ix] %></td>
      <% if experiment.type =~ /ucb1/i %>
      <td class="column-conf-<%=group_name %>"><%= @confidences_rows[group_name][ix] %></td>
      <% end %>
      <% end %>
    </tr>
  <% end %>
  </tbody>
</table>
<h3>Total for each group (by order of util)</h3>
<% end %>

<script>
Array.prototype.chunk = function(chunkSize) {
    var array=this;
    return [].concat.apply([],
        array.map(function(elem,i) {
            return i%chunkSize ? [] : [array.slice(i,i+chunkSize)];
        })
    );
}
<% row = 0 %>
var group = []
<% for group_name in experiment.groups.keys.sort %>
  <% for v in experiment.utility_function_variables %>
  group[<%= row %>] = <%= experiment.event_totals[group_name][v] %>
  <% row = row + 1 %>
  <% end %>
<% end %>
group = group.chunk(<%= experiment.utility_function_variables.length %>)
console.log(group);

<% row = 0 %>
var timePlay = []
var timeUtil = []
<% for ix in @chart_sample_count.times.to_a %>
  <% for group_name in experiment.groups.keys.sort %>
  timePlay[<%= row %>] = <%= @plays_rows[group_name][ix] %>
  timeUtil[<%= row %>] = <%= @utilities_rows[group_name][ix] %>
  <% row = row + 1 %>
  <% end %>
<% end %>
timePlay = d3.transpose(timePlay.chunk(<%= experiment.groups.keys.length %>))
timeUtil = d3.transpose(timeUtil.chunk(<%= experiment.groups.keys.length %>))



// D3 Chart stuff

// If you're only looking at one metric, graphing is easy...
for (i = 0; i < group.length; i++) {
  var x = d3.scale.linear()
    .domain([0, d3.max(group[i])])
    .range(["0px", "710px"]);
  var chart = d3.select(".body").append("div")
    .attr("class", "chart");
  chart.selectAll("div")
    .data(group[i])
  .enter().append("div")
    .style("width", x)
    .text(String);
}

</script>
